mdp

// diagram 1
module M1a
s1a: [0..3] init 1;

[]   s1a = 1 -> 1: (s1a' = 2);
[]   s1a = 2 -> 1: (s1a' = 3);
[f1d1] s1a = 3 -> 1: (s1a' = 0);
endmodule

module M1b
s1b : [0..1] init 0;

[f1d1] s1b = 0 -> 1: (s1b' = 1);
[j1d1] s1b = 1 -> 1: (s1b' = 0);
endmodule

module M1c
s1c : [0..1] init 0;

[f1d1] s1c = 0 -> 1: (s1c' = 1);
[j1d1] s1c = 1 -> 1: (s1c' = 0);
endmodule

module M1d
s1d : [0..1] init 0;

[f1d1] s1d = 0 -> 1: (s1d' = 1);
[j1d1] s1d = 1 -> 1: (s1d' = 0);
endmodule

module M1e
s1e: [0..7] init 0;

[j1d1] s1e = 0 -> 1: (s1e' = 1);
[]   s1e = 1 -> 1:(s1e' = 2);
[]   s1e = 2 -> 1:(s1e' = 3);
[]   s1e = 3 -> 0.5:(s1e' = 4) + 0.5:(s1e' = 5);
[]   s1e = 4 -> 1:(s1e' = 5);
[]   s1e = 5 -> 1:(s1e' = 6);
[]   s1e = 6 -> 1:(s1e' = 7);
endmodule


// diagram 2
module M2
s2: [0..7] init 1;

[]   s2 = 1 -> 1: (s2' = 2);
[]   s2 = 2 & (s1e >= 6) -> 1: (s2' = 3);
[]   s2 = 3 -> 1: (s2' = 4);
[]   s2 = 4 -> 1: (s2' = 5);
[]   s2 = 5 -> 0.5: (s2' = 2) + 0.5: (s2' = 6);
[]   s2 = 6 -> 1: (s2' = 7);
endmodule


// diagram 3
module M3a
s3a : [0..4] init 1;

[]   s3a = 1 -> 1: (s3a' = 2);
[]   s3a = 2 -> 1: (s3a' = 3);
[]   s3a = 3 & (s2 >= 6) -> 1: (s3a' = 4);
[f1d3] s3a = 4 -> 1: (s3a' = 0);
[d1d3] s3a = 0 -> 1: (s3a' = 3);
endmodule


module M3b
s3b : [0..1] init 0;

[f1d3] s3b = 0 -> 1: (s3b' = 1);
[j1d3] s3b = 1 -> 1: (s3b' = 0);
endmodule


module M3c
s3c : [0..1] init 0;

[f1d3] s3c = 0 -> 1: (s3c' = 1);
[j1d3] s3c = 1 -> 1: (s3c' = 0);
endmodule


module M3d
s3d : [0..1] init 0;

[f1d3] s3d = 0 -> 1: (s3d' = 1);
[j1d3] s3d = 1 -> 1: (s3d' = 0);
endmodule


module M3e
s3e : [0..6] init 0;

[j1d3] s3e = 0 -> 1: (s3e' = 1);
[]   s3e = 1 -> 1: (s3e' = 2);
[]   s3e = 2 -> 1: (s3e' = 3);
[]   s3e = 3 -> 0.5: (s3e' = 4) + 0.5: (s3e' = 6);
[]   s3e = 4 -> 1: (s3e' = 5);
[]   s3e = 5 -> 1: (s3e' = 6);
[d1d3]   s3e = 6 -> 1: (s3e' = 0);
endmodule


// diagram 4
module M4
s4 : [0..12] init 1;

[]   s4 = 1 -> 1: (s4' = 2);
[]   s4 = 2 -> 1: (s4' = 3);
[]   s4 = 3 & (s3e >= 4) & (s3e <= 5) -> 1: (s4' = 4);
[]   s4 = 4 -> 1: (s4' = 5);
[]   s4 = 5 -> 1: (s4' = 6);
[]   s4 = 6 -> 1: (s4' = 7);
[]   s4 = 7 -> 1: (s4' = 8);
[]   s4 = 8 -> 1: (s4' = 9);
[]   s4 = 9 -> 0.5: (s4' = 7) + 0.5: (s4' = 10);
[]   s4 = 10 -> 1: (s4' = 11);
[]   s4 = 11 -> 1: (s4' = 12);
endmodule



// diagram 5
module M5
s5 : [0..7] init 1;

[]   s5 = 1 -> 1: (s5' = 2);
[]   s5 = 2 & (s4 >= 10) -> 1: (s5' = 3);
[]   s5 = 3 -> 1: (s5' = 4);
[]   s5 = 4 -> 1: (s5' = 5);
[]   s5 = 5 -> 0.5: (s5' = 6) + 0.5: (s5' = 7);
[d1d5] s5 = 7 -> 1: (s5' = 2);
endmodule


// diagram 6
module M6
s6 : [0..11] init 1;

[]   s6 = 1 -> 1: (s6' = 2);
[]   s6 = 2 -> 1: (s6' = 3);
[]   s6 = 3 & (s5 >= 3) & (s5 <= 6) -> 1: (s6' = 4);
[]   s6 = 4 -> 1: (s6' = 5);
[]   s6 = 5 -> 1: (s6' = 6);
[]   s6 = 6 -> 0.5: (s6' = 4) + 0.5: (s6' = 7);
[]   s6 = 7 -> 1: (s6' = 8);
[]   s6 = 8 -> 1: (s6' = 9);
[]   s6 = 9 -> 0.5: (s6' = 10) + 0.5: (s6' = 3);
[]   s6 = 10 -> 1: (s6' = 11);
[d1d5] s6 >= 0 -> 1: (s6' = 1);
endmodule

