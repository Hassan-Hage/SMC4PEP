mdp

label "end_state" = (s0a = 0) & (s0b = 0) & (s0c = 0) & (s0d = 0) & (s0e = 0)
                   &(s0f = 0) & (s0g = 0) & (s0h = 0) & (s0i = 0) & (s0j = 3)
                   &(s1a = 0) & (s1b = 0) & (s1c = 0) & (s1d = 0) & (s1e = 12)
                   &(s2a = 0) & (s2b = 0) & (s2c = 0) & (s2d = 0) & (s2e = 11)
                   &(s3 = 13) & (s4 = 14) & (s5a = 0) & (s5b = 0) & (s5c = 0) & (s5d = 5);

rewards
// diagram 0
s0a = 2: 17/6;

s0b = 1: 17/6/3;
s0c = 1: 17/6/3;
s0d = 1: 17/6/3;

s0e = 2: 17/6;
s0e = 3: 17/6;

s0f = 1: 17/6/4;
s0g = 1: 17/6/4;
s0h = 1: 17/6/4;
s0i = 1: 17/6/4;

s0i = 2: 17/6;

// diagram 1
s1a = 1: 1;
s1a = 4: 3;

s1b = 1: 1;
s1c = 1: 1;
s1d = 1: 1;

s1e = 2: 3;
s1e = 3: 3;
s1e = 4: 3;

s1e = 7: 3.5;
s1e = 8: 3.5;
s1e = 9: 3.5;
s1e = 11: 3.5;

// diagram 2
s2a = 2: 1;
s2a = 4: 3.75;

s2b = 1: 3.75 / 3;
s2c = 1: 3.75 / 3;
s2d = 1: 3.75 / 3;

s2e = 2: 3.75;
s2e = 4: 3.75;

s2e = 6: 12.5;
s2e = 7: 12.5;

s2e = 9: 15;

// diagram 3
s3 = 4: 4;
s3 = 5: 4;
s3 = 6: 4;
s3 = 7: 4;
s3 = 8: 4;
s3 = 10: 4;

// diagram 4
s4 = 2: 1;

s4 = 4: 1.5;
s4 = 5: 1.5;

s4 = 7: 2.75;
s4 = 9: 2.75;
s4 = 10: 2.75;
s4 = 12: 2.75;

// diagram 5
s5a = 2: 1;

s5a = 4: 1.5;

s5b = 1: 1.5/2;
s5c = 1: 1.5/2;

s5d = 1: 1.5;
s5d = 3: 1.5;

endrewards


// diagram 0
module M0a
s0a: [0..3] init 1;

[]   s0a = 1 -> 1: (s0a' = 2);
[]   s0a = 2 -> 1: (s0a' = 3);
[f1d0] s0a = 3 -> 1: (s0a' = 0);
[d1d0]   s0a = 0 -> 1:(s0a' = 2);
endmodule

module M0b
s0b : [0..1] init 0;

[f1d0] s0b = 0 -> 1: (s0b' = 1);
[j1d0] s0b = 1 -> 1: (s0b' = 0);
endmodule

module M0c
s0c : [0..1] init 0;

[f1d0] s0c = 0 -> 1: (s0c' = 1);
[j1d0] s0c = 1 -> 1: (s0c' = 0);
endmodule

module M0d
s0d : [0..1] init 0;

[f1d0] s0d = 0 -> 1: (s0d' = 1);
[j1d0] s0d = 1 -> 1: (s0d' = 0);
endmodule

module M0e
s0e: [0..6] init 0;

[j1d0] s0e = 0 -> 1: (s0e' = 1);
[]   s0e = 1 -> 1:(s0e' = 2);
[]   s0e = 2 -> 1:(s0e' = 3);
[]   s0e = 3 -> 1:(s0e' = 5);
[]   s0e = 4 -> 0.5:(s0e' = 5) + 0.5:(s0e' = 6);
[d1d0]   s0e = 6 -> 1:(s0e' = 0);
[f2d0]   s0e = 5 -> 1:(s0e' = 0);
endmodule

module M0f
s0f : [0..1] init 0;

[f2d0] s0f = 0 -> 1: (s0f' = 1);
[j2d0] s0f = 1 -> 1: (s0f' = 0);
endmodule

module M0g
s0g : [0..1] init 0;

[f2d0] s0g = 0 -> 1: (s0g' = 1);
[j2d0] s0g = 1 -> 1: (s0g' = 0);
endmodule

module M0h
s0h : [0..1] init 0;

[f2d0] s0h = 0 -> 1: (s0h' = 1);
[j2d0] s0h = 1 -> 1: (s0h' = 0);
endmodule

module M0i
s0i : [0..1] init 0;

[f2d0] s0i = 0 -> 1: (s0i' = 1);
[j2d0] s0i = 1 -> 1: (s0i' = 0);
endmodule

module M0j
s0j : [0..3] init 0;

[j2d0] s0j = 0 -> 1: (s0j' = 1);
[] s0j = 1 -> 1: (s0j' = 2);
[] s0j = 2 -> 1: (s0j' = 3);
endmodule

// diagram 1
module M1a
s1a: [0..5] init 1;

[]   s1a = 1 -> 1: (s1a' = 2);
[]   s1a = 2 -> 1: (s1a' = 3);
[]   s1a = 3 & (s0j >= 3) -> 1: (s1a' = 4);
[]   s1a = 4 -> 1: (s1a' = 5);
[f1d1] s1a = 5 -> 1: (s1a' = 0);
endmodule

// diagram 1
module M1b
s1b : [0..1] init 0;

[f1d1] s1b = 0 -> 1: (s1b' = 1);
[j1d1] s1b = 1 -> 1: (s1b' = 0);
endmodule

module M1c
s1c : [0..1] init 0;

[f1d1] s1c = 0 -> 1: (s1c' = 1);
[j1d1] s1c = 1 -> 1: (s1c' = 0);
endmodule

module M1d
s1d : [0..1] init 0;

[f1d1] s1d = 0 -> 1: (s1d' = 1);
[j1d1] s1d = 1 -> 1: (s1d' = 0);
endmodule

module M1e
s1e: [0..12] init 0;

[j1d1] s1e = 0 -> 1: (s1e' = 1);
[]   s1e = 1 -> 1:(s1e' = 2);
[]   s1e = 2 -> 1:(s1e' = 3);
[]   s1e = 3 -> 0.5:(s1e' = 4) + 0.5:(s1e' = 5);
[]   s1e = 4 -> 1:(s1e' = 5);
[]   s1e = 5 -> 1:(s1e' = 6);
[]   s1e = 6 -> 1:(s1e' = 7);
[]   s1e = 7 -> 1:(s1e' = 8);
[]   s1e = 8 -> 1:(s1e' = 9);
[]   s1e = 9 -> 1:(s1e' = 10);
[]   s1e = 10 -> 0.5:(s1e' = 7) + 0.5: (s1e' = 11);
[]   s1e = 11 -> 1: (s1e' = 12);
endmodule

// diagram 2
module M2a
s2a : [0..4] init 1;

[]   s2a = 1 -> 1: (s2a' = 2);
[]   s2a = 2 -> 1: (s2a' = 3);
[]   s2a = 3 & (s1e >= 6) -> 1: (s2a' = 4);
[f1d3] s2a = 4 -> 1: (s2a' = 0);
[d1d3] s2a = 0 -> 1: (s2a' = 3);
endmodule


module M2b
s2b : [0..1] init 0;

[f1d3] s2b = 0 -> 1: (s2b' = 1);
[j1d3] s2b = 1 -> 1: (s2b' = 0);
endmodule


module M2c
s2c : [0..1] init 0;

[f1d3] s2c = 0 -> 1: (s2c' = 1);
[j1d3] s2c = 1 -> 1: (s2c' = 0);
endmodule


module M2d
s2d : [0..1] init 0;

[f1d3] s2d = 0 -> 1: (s2d' = 1);
[j1d3] s2d = 1 -> 1: (s2d' = 0);
endmodule


module M2e
s2e : [0..13] init 0;

[j1d3] s2e = 0 -> 1: (s2e' = 1);
[]   s2e = 1 -> 1: (s2e' = 2);
[]   s2e = 2 -> 1: (s2e' = 3);
[]   s2e = 3 -> 0.5: (s2e' = 4) + 0.5: (s2e' = 12);
[]   s2e = 4 -> 1: (s2e' = 5);
[]   s2e = 5 & (s3 >= 12) -> 1: (s2e' = 6);
[]   s2e = 6 -> 1: (s2e' = 7);
[]   s2e = 7 -> 1: (s2e' = 8);
[]   s2e = 8 & (s4 >= 13) -> 1: (s2e' = 9);
[]   s2e = 9 -> 1: (s2e' = 10);
[]   s2e = 10 -> 0.5: (s2e' = 11) + 0.5: (s2e' = 13);
[d2d3]   s2e = 13 -> 1: (s2e' = 7);
[d1d3]   s2e = 12 -> 1: (s2e' = 0);
endmodule


// diagram 3
module M3
s3 : [0..13] init 1;

[]   s3 = 1 -> 1: (s3' = 2);
[]   s3 = 2 -> 1: (s3' = 3);
[]   s3 = 3 & (s2e >= 5) & (s2e <= 11) -> 1: (s3' = 4);
[]   s3 = 4 -> 1: (s3' = 5);
[]   s3 = 5 -> 1: (s3' = 6);
[]   s3 = 6 -> 1: (s3' = 7);
[]   s3 = 7 -> 1: (s3' = 8);
[]   s3 = 8 -> 1: (s3' = 9);
[]   s3 = 9 -> 0.5: (s3' = 7) + 0.5: (s3' = 10);
[]   s3 = 10 -> 1: (s3' = 11);
[]   s3 = 11 -> 1: (s3' = 12);
[]   s3 = 12 -> 1: (s3' = 13);
[d2d3] s3 >= 0 -> 1: (s3' = 1);
endmodule


// diagram 4
module M4
s4 : [0..16] init 1;

[]   s4 = 1 -> 1: (s4' = 2);
[]   s4 = 2 -> 1: (s4' = 3);
[]   s4 = 3 & (s2e >= 8) & (s2e <= 11) -> 1: (s4' = 4);
[]   s4 = 4 -> 1: (s4' = 5);
[]   s4 = 5 -> 1: (s4' = 6);
[]   s4 = 6 -> 1: (s4' = 7);
[]   s4 = 7 -> 1: (s4' = 8);
[]   s4 = 8 -> 0.5: (s4' = 15) + 0.5: (s4' = 9);
[d1d6] s4 = 15 -> 1: (s4' = 5);
[]   s4 = 9 -> 1: (s4' = 10);
[]   s4 = 10 -> 1: (s4' = 11);
[]   s4 = 11 -> 0.5: (s4' = 12) + 0.5: (s4' = 16);
[d2d6] s4 = 16 -> 1: (s4' = 4);
[]   s4 = 12 -> 1: (s4' = 13);
[]   s4 = 13 -> 1: (s4' = 14);
// restart (from diag 3)
[d2d3]   s4 >= 0 -> 1: (s4' = 1);
endmodule


// diagram 5
module M5a
s5a : [0..4] init 1;

[]   s5a = 1 -> 1: (s5a' = 2);
[]   s5a = 2 -> 1: (s5a' = 3);
[]   s5a = 3 & (s4 >= 4) -> 1: (s5a' = 4);
[f1d7] s5a = 4 -> 1: (s5a' = 0);
[d1d7] s5a = 0 -> 1: (s5a' = 1);
// restarts
[d2d3] s5a >= 0 -> 1: (s5a' = 1);
[d1d6] s5a >= 0 -> 1: (s5a' = 1);
[d2d6] s5a >= 0 -> 1: (s5a' = 1);
endmodule

module M5b
s5b : [0..1] init 0;

[f1d7] s5b = 0 -> 1: (s5b' = 1);
[j1d7] s5b = 1 -> 1: (s5b' = 0);
// restarts
[d2d3] s5b >= 0 -> 1: (s5b' = 0);
[d1d6] s5b >= 0 -> 1: (s5b' = 0);
[d2d6] s5b >= 0 -> 1: (s5b' = 0);
endmodule

module M5c
s5c : [0..1] init 0;

[f1d7] s5c = 0 -> 1: (s5c' = 1);
[j1d7] s5c = 1 -> 1: (s5c' = 0);
// restarts
[d2d3] s5c >= 0 -> 1: (s5c' = 0);
[d1d6] s5c >= 0 -> 1: (s5c' = 0);
[d2d6] s5c >= 0 -> 1: (s5c' = 0);
endmodule

module M5d
s5d : [0..6] init 0;

[j1d7] s5d = 0 -> 1: (s5d' = 1);
[]   s5d = 1 -> 1: (s5d' = 2);
[]   s5d = 2 -> 1: (s5d' = 3);
[]   s5d = 3 -> 0.5: (s5d' = 4) + 0.5: (s5d' = 6);
[d1d7]   s5d = 6 -> 1: (s5d' = 0);
[]   s5d = 4 -> 1: (s5d' = 5);
// restarts
[d2d3] s5d >= 0 -> 1: (s5d' = 0);
[d1d6] s5d >= 0 -> 1: (s5d' = 0);
[d2d6] s5d >= 0 -> 1: (s5d' = 0);

endmodule
