mdp

label "end_state" = (s1a = 0) & (s1b = 0) & (s1c = 0) & (s1d = 15) & (s2 = 25) & (s3 = 19); 

rewards
s1a = 2: 2;

s1b = 1: 1;

s1c = 1: 1;

s1d = 1: 2;
s1d = 4: 16/3;
s1d = 6: 16/3;
s1d = 7: 16/3;
s1d = 9: 4;
s1d = 12: 2;
s1d = 11: 1;
s1d = 13: 1;

s2 = 2: 2;
s2 = 15: 7;
s2 = 23: 1;

s2 = 23: 1;

s3 = 3: 2;
s3 = 16: 14;
s3 = 17: 1;
endrewards

// diagram 1
module M1a
s1a : [0..3] init 1;

[] s1a = 1 -> 1: (s1a' = 2); 
[] s1a = 2 -> 1: (s1a' = 3); 
[f1d2] s1a = 3 -> 1: (s1a' = 0); 
endmodule

module M1b
s1b : [0..1] init 0;

[f1d2] s1b = 0 -> 1: (s1b' = 1); 
[j1d2] s1b = 1 -> 1: (s1b' = 0);
endmodule

module M1c
s1c : [0..6] init 0;

[f1d2] s1c = 0 -> 1: (s1c' = 1); 
[] s1c = 1 -> 1: (s1c' = 2);
[] s1c = 2 -> 1: (s1c' = 3);
[] s1c = 3 -> 0.5: (s1c' = 4) + 0.5: (s1c' = 6);
[] s1c = 4 -> 1: (s1c' = 5);
[] s1c = 5 -> 1: (s1c' = 6);
[j1d2] s1c = 6 -> 1: (s1c' = 0);
endmodule

module M1d
s1d : [0..15] init 0;
y2d : [0..2] init 2;

[j1d2] s1d = 0 -> 1: (s1d' = 1);
[] s1d = 1 -> 1: (s1d' = 2);
[] s1d = 2 -> 1: (s1d' = 3);
[] s1d = 3 & (s2 >= 3) & (s2 <= 14) & (s3 >= 18) & (s3 <= 19)  -> 1: (s1d' = 4);
[] s1d = 4 -> 1: (s1d' = 5);
[] s1d = 5 -> 0.5: (s1d' = 6) & (y2d' = 0) + 0.5: (s1d' = 8) & (y2d' = 1);
[] s1d = 6 -> 1: (s1d' = 7);
[] s1d = 7 & (s2 >= 24) & (s2 <= 25) -> 1: (s1d' = 8);
[] s1d = 8 -> 1: (s1d' = 9);
[] s1d = 9 -> 1: (s1d' = 10);
[] s1d = 10 -> 0.6: (s1d' = 11) + 0.4: (s1d' = 12);
[] s1d = 11 -> 1: (s1d' = 13);
[] s1d = 12 -> 1: (s1d' = 15);
[] s1d = 13-> 1: (s1d' = 14);
[] s1d = 14 -> 1: (s1d' = 15);
endmodule


// diagram 2
module M2
s2 : [0..26] init 1;

[] s2 = 1 -> 1: (s2' = 2);
[] s2 = 2 -> 1: (s2' = 3);
[] s2 = 3 & (s1d >= 3) & (s1d <= 15) -> 1: (s2' = 4);
[] s2 = 4 -> 1: (s2' = 5);
[] s2 = 5 -> 1: (s2' = 6);
[] s2 = 6 -> 1: (s2' = 7);
[] s2 = 7 -> 1: (s2' = 8);
[] s2 = 8 -> 1: (s2' = 9);
[] s2 = 9 -> 0.5: (s2' = 10) + 0.5: (s2' = 11);
[] s2 = 10 -> 1: (s2' = 12);
[] s2 = 11 -> 1: (s2' = 13);
[] s2 = 12 -> 1: (s2' = 13);
[] s2 = 13 -> 1: (s2' = 14);
[] s2 = 14 & (s1d >=6) -> 1: (s2' = 15);
[] s2 = 15 -> 1: (s2' = 26);
[] s2 = 26 & (y2d = 0) -> 1: (s2' = 16);
[] s2 = 26 & (y2d = 1) -> 1: (s2' = 19);
[] s2 = 16 -> 1: (s2' = 17);
[] s2 = 17 -> 1: (s2' = 18);
[] s2 = 18 -> 1: (s2' = 19);
[] s2 = 19 -> 1: (s2' = 20);
[] s2 = 20 -> 1: (s2' = 21);
[] s2 = 21 -> 1: (s2' = 22);
[] s2 = 22 -> 0.5: (s2' = 23) + 0.5: (s2' = 21);
[] s2 = 23 -> 1: (s2' = 24);
[] s2 = 24 -> 1: (s2' = 25);
endmodule


// diagram 3
module M3
s3 : [0..19] init 1;

[] s3 = 1 -> 1: (s3' = 2);
[] s3 = 2 -> 1: (s3' = 3);
[] s3 = 3 & ( (s1c >= 5) & (s1c <= 6) | (s1d >= 1 & s1d <= 15) ) -> 1: (s3' = 4);
[] s3 = 4 -> 1: (s3' = 5);
[] s3 = 5 -> 1: (s3' = 6);
[] s3 = 6 -> 1: (s3' = 7);
[] s3 = 7 -> 1: (s3' = 8);
[] s3 = 8 -> 1: (s3' = 9);
[] s3 = 9 -> 1: (s3' = 10);
[] s3 = 10 -> 0.5: (s3' = 11) + 0.5: (s3' = 12);
[] s3 = 11 -> 1: (s3' = 13);
[] s3 = 12 -> 1: (s3' = 17);
[] s3 = 13 -> 1: (s3' = 14);
[] s3 = 14 -> 1: (s3' = 15);
[] s3 = 15 -> 1: (s3' = 16);
[] s3 = 16 -> 1: (s3' = 17);
[] s3 = 17 -> 1: (s3' = 18);
[] s3 = 18 -> 1: (s3' = 19);
endmodule